AWSTemplateFormatVersion: 2010-09-09
Description: CodeBuild project for deployments

# Note: It's necessary to set up the AWS OAuth application to have access to your repositories.
# To do it, navigate to the AWS CodeBuild console, create a project and select GitHub as source provider. The project does not need to be saved, it is only important to connect to GitHub. It only needs to be done once.

Parameters:
  EnvLabel:
    Type: String

  GitRepo:
    Type: String

  SubSystem:
    Type: String
    Description: Subsystem Code (should be all lowercases)
    AllowedPattern: "^[a-z]+$"

  ServiceName:
    Type: String

  SourcePath:
    Type: String

Resources:
  CodeBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: !Join ['-', [!Ref 'AWS::StackName', 'DeployCodeBuildRolePolicy']]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*
              - Effect: Allow
                Action:
                  - ecs:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - application-autoscaling:*
                  - cloudformation:*
                  - cloudwatch:*
                  - servicediscovery:*
                  - ssm:*
                Resource: "*"
              - Resource: "*"
                Effect: Allow
                Action:
                - iam:PassRole

  CodeBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Description: ECS Deployer
      ServiceRole: !GetAtt CodeBuildIAMRole.Arn
      Artifacts:
        Type: no_artifacts
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        Location: !Sub https://github.com/${GIT_REPO}.git
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - if [ ! -z "$GIT_BRANCH" ]; then git checkout $GIT_BRANCH; fi
            build:
              commands:
                - echo "Starting deploy for ${SERVICE_NAME} for ${ENV_LABEL} environment"
                - cd $SOURCE_PATH
                - |
                  if [ ! -z "$DEPLOY_SERVICE_VERSION" ]; then
                    echo "Deploying ${DEPLOY_SERVICE_VERSION}..."
                    make deploy-service SERVICE_VERSION=$DEPLOY_SERVICE_VERSION
                  else
                    COMMIT="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 7)"
                    echo "Deploying ${COMMIT}..."
                    make test
                    make ecr-push SERVICE_VERSION=$COMMIT
                    make deploy-service SERVICE_VERSION=$COMMIT
                  fi
      Triggers:
        Webhook: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        EnvironmentVariables:
        - Name: SERVICE_NAME
          Value: !Ref ServiceName
        - Name: ENV_LABEL
          Value: !Ref EnvLabel
        - Name: SOURCE_PATH
          Value: !Ref SourcePath
